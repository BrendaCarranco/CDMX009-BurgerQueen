{"version":3,"sources":["img/logo.svg","components/orders/images/edit.svg","img/logo-receipt.png","img/barras.png","img/initBurger.png","components/dashboard/menuCards/BreakfastCards.js","components/dashboard/menuCards/DinnerCards.js","components/dashboard/resume-menu/ResumeMenu.js","firebase/firebaseConfig.js","components/dashboard/client-Info/ClientInfo.js","components/dashboard/Button.js","components/layout/SignedInLinks.js","components/layout/Navbar.js","components/dashboard/Dashboard.jsx","components/orders/edit-order/EditOrder.js","components/orders/order-finished/OrderFinished.js","components/orders/chronometer/Chronometer.js","components/orders/status/BtnStatus.js","components/orders/order/Orders.js","components/auth/Modal.js","components/auth/SignIn.js","components/admon/all-orders/detailsOrder.js","components/admon/all-orders/AllOrders.js","components/admon/ModalAdmin.js","components/admon/Admin.js","components/BQ/BurgerQueen.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","FoodItem","item","id","price","quantity","addOrder","className","onClick","src","alt","name","useBreakfast","useState","breakfast","setBreakfast","useEffect","fetch","then","res","json","data","desayunos","BreakfastMenu","map","breakfastOrder","key","image","useDinner","dinner","setDinner","comidas","DinnerCards","food","ResumeMenu","deleteOrder","allProducts","productos","length","a","index","total","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","toast","configure","ClientInfoForm","setData","handleInputChange","e","target","value","now","Date","hour","getHours","getMinutes","join","date","getDate","getMonth","getFullYear","sendData","preventDefault","error","hideProgressBar","numeroMesa","trim","numeroComensales","db","firestore","newOrder","table","people","order","payment","waitTime","status","endingOrder","collection","add","success","console","log","onSubmit","onChange","disabled","selected","type","Button","setVisible","ClientInfo","SignedInLinks","href","withRouter","props","data-target","bqLogo","auth","signOut","history","push","catch","Dashboard","visible","calculateTotal","items","reduce","acc","product","find","BreakfastCards","filter","products","EditOrder","orderSelected","finalOrder","setFinalOrder","newAdditionToOrder","setNewAdditionToOrder","allItemsOrdered","previousOrder","currentOder","nuevaOrden","concat","newProduct","addNewProduct","desayuno","comida","class","OrderFinished","orderFinished","totalWithTip","setTotalWithTip","paymentMethod","setPaymentMethod","newTotalCalculated","tip","newTotal","toFixed","method","action","checked","doc","update","Chronometer","useStopwatch","autoStart","seconds","minutes","start","pause","totalTime","BtnStatus","updateDoc","position","autoClose","closeOnClick","pauseOnHover","draggable","progress","undefined","Orders","datos","setOrder","currentDay","where","orderBy","limit","onSnapshot","snapshot","docs","useOrder","deliveryTime","setOrderFinished","setOrderSelected","editImage","editBtn","changeOrder","finishedOrder","ModalAuth","modalIsOpen","setModalIsOpen","isOpen","SignIn","email","setEmail","password","setPassword","submit","login","err","useCallback","signInWithEmailAndPassword","code","htmlFor","Modal","data-testid","DetailOrders","logoBQ","barras","AllOrders","orders","allOrder","setAllOrder","useAllOrder","viewReceipt","ModalAdmin","user","setUser","register","newEmail","setNewEmail","newPass","setNewPass","newName","setNewName","newWork","setNewWork","createUserWithEmailAndPassword","userInfo","uid","workstation","set","placeholder","Admin","get","arrayData","getUsers","BurgerQueen","logo","App","onAuthStateChanged","path","component","exact","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3b835007.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1b9382a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.2927f8de.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-receipt.9f2b5b69.png\";","module.exports = __webpack_public_path__ + \"static/media/barras.b1db6d76.png\";","module.exports = __webpack_public_path__ + \"static/media/initBurger.385ae813.png\";","import React, { useState, useEffect } from 'react';\nimport './menuCards.css';\n\nconst FoodItem = ({ item, id, price, quantity, addOrder }) => (\n    <div className='col m6 space'>\n        <div className='card general' onClick={() => { addOrder({ item, price, id, quantity }); }}>\n            <div className=\"card-image row food-image\">\n                <img src={`/img/products/${id}.png`} className='col m6 img-icon item' alt='food-img' />\n            </div>\n            <div className='card-content white-text center-align'>\n                <div>\n                    <p className='info' name='item'>{item}</p>\n                    <p className='info' name='price'>$ {price}.00  </p>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport function useBreakfast() {\n    const [breakfast, setBreakfast] = useState([]);\n\n    useEffect(() => {\n        const breakfastMenuUrl = 'https://v2-api.sheety.co/08037a6e719e10abd51ee7fe17bba593/burgerQueenMenu/desayunos';\n        fetch(breakfastMenuUrl)\n            .then(res => res.json())\n            .then(data => {\n                setBreakfast(data.desayunos);\n            });\n    }, []\n    );\n    return breakfast;\n}\n\n\nconst BreakfastMenu = ({ addOrder }) => {\n\n    const breakfast = useBreakfast();\n\n    return (\n\n        <div className='scroll-cards'>\n            <ul>\n                <li>\n                    {breakfast.map((breakfastOrder) => (\n                        <FoodItem\n                            key={breakfastOrder.id}\n                            id={breakfastOrder.id}\n                            item={breakfastOrder.item}\n                            price={breakfastOrder.price}\n                            image={breakfastOrder.image}\n                            quantity='1'\n                            addOrder={addOrder}\n                        />\n                    ))}\n                </li>\n            </ul>\n        </div >\n    );\n};\nexport default BreakfastMenu;","import React, { useState, useEffect } from 'react';\n\nconst FoodItem = ({ item, id, price, quantity, addOrder }) => (\n    <div className='col m6 space'>\n        <div className='card general' onClick={() => { addOrder({ item, price, id, quantity }); }}>\n            <div className=\"card-image row food-image\">\n                <img src={`/img/products/${id}.png`} className='col m6 img-icon item' alt='food-img' />\n            </div>\n            <div className='card-content white-text center-align'>\n                <div>\n                    <p className='info' name='item'>{item}</p>\n                    <p className='info' name='price'>$ {price}.00  </p>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport const useDinner = () => {\n    const [dinner, setDinner] = useState([]);\n\n    useEffect(() => {\n        let dinnerMenuUrl = 'https://v2-api.sheety.co/08037a6e719e10abd51ee7fe17bba593/burgerQueenMenu/comidas';\n        fetch(dinnerMenuUrl)\n            .then(res => res.json())\n            .then(data => {\n                setDinner(data.comidas);\n            });\n    }, []);\n    return dinner;\n\n};\n\nconst DinnerCards = ({ addOrder }) => {\n\n    const dinner = useDinner();\n\n    return (\n\n        <div className='scroll-cards'>\n            <ul>\n                <li>\n                    {dinner.map((food) => (\n                        <FoodItem\n                            key={food.id}\n                            id={food.id}\n                            item={food.item}\n                            price={food.price}\n                            image={food.image}\n                            addOrder={addOrder}\n                        />\n                    ))}\n                </li>\n            </ul>\n        </div >\n    );\n};\n\nexport default DinnerCards;\n\n","import React, { Fragment } from 'react';\nimport './resume.css';\n\nconst ResumeMenu = ({ addOrder, data, deleteOrder }) => {\n  let allProducts = data.productos;\n\n  return (\n    <Fragment>\n      <div className=\"resume-card white-text scroll\">\n        <div className='container'>\n          <div className='row'>\n            <div className='prueba'>\n              <p className='center-align resume-title'>Resumen del pedido</p>\n              <div className=\"divider yellow lighten-2\"></div>\n            </div>\n            {\n              allProducts.length === 0 ? (<p className='center-align products-order'>No hay productos en la orden</p>\n              ) : (\n                  allProducts.map((a, index) => (\n                    <div className='order-info' key={index}>\n                      <p className='col m7'>{a.item}</p>\n                      <div className='red'>\n                        <div className='col m1'>\n                          <span className=\"material-icons btn-quantity\" onClick={() => addOrder(a, a.quantity + 1)}>add</span>\n                        </div>\n                        <div className='col m1'>\n                          <p>{a.quantity}</p>\n                        </div>\n                        <div className=' col m1'>\n                          {\n                            a.quantity > 1 ? (\n                              <span className=\"material-icons btn-quantity\" onClick={() => addOrder(a, a.quantity - 1)}>remove</span>\n                            ) : null\n                          }\n                        </div>\n                      </div>\n                      <p className='col m1'>${a.price}</p>\n                      <p className=\"material-icons resume-icon col m1 right delete-btn\" onClick={() => { deleteOrder(a.id); }}>delete</p>\n                    </div>\n                  )))\n            }\n          </div>\n        </div>\n      </div>\n      <div className='card total'>\n        <div>\n          <span className='total-price white-text'>TOTAL: $ {data.total}</span>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ResumeMenu;\n\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCAl8ZE1lvU4tmlv1M00tgsOZXT6BkBsf4\",\n  authDomain: \"burgerqueen-7107e.firebaseapp.com\",\n  databaseURL: \"https://burgerqueen-7107e.firebaseio.com\",\n  projectId: \"burgerqueen-7107e\",\n  storageBucket: \"burgerqueen-7107e.appspot.com\",\n  messagingSenderId: \"704526007803\",\n  appId: \"1:704526007803:web:cc9840618904284f611f5e\",\n  measurementId: \"G-MZM42GKNCG\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport { firebase };\n","import React, { Fragment } from 'react';\nimport { firebase } from '../../../firebase/firebaseConfig';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport '../client-Info/clientInfo.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\nconst ClientInfoForm = ({ data, setData }) => {\n\n    const handleInputChange = (e) => {\n\n        setData({\n            ...data,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const now = new Date();\n    const hour = [now.getHours(), now.getMinutes()].join(':');\n    const date = [now.getDate(), now.getMonth(), now.getFullYear()].join('/');\n\n    const sendData = async (e) => {\n        e.preventDefault();\n        if (data.productos < 1) {\n            toast.error('Ingresa productos a la orden', {\n                className: 'toast-error center-align',\n                hideProgressBar: true\n            });\n            return;\n        }\n        if (!data.numeroMesa.trim()) {\n            toast.error('Ingresa número de mesa', {\n                className: 'toast-error center-align',\n                hideProgressBar: true\n            });\n            return;\n        }\n        if (!data.numeroComensales.trim()) {\n            toast.error('Ingresa número de comensales', {\n                className: 'toast-error center-align',\n                hideProgressBar: true\n            });\n            return;\n        }\n        try {\n            const db = firebase.firestore();\n            const newOrder = {\n                table: data.numeroMesa,\n                people: data.numeroComensales,\n                order: data.productos,\n                payment: '',\n                total: data.total,\n                date: date,\n                hour: hour,\n                waitTime: '',\n                status: 'pending',\n                endingOrder: 'no',\n            };\n\n            await db.collection('orders').add(newOrder);\n\n            toast.success('Pedido enviado a cocina!', {\n                className: 'toast-resume black-text center-align',\n                hideProgressBar: true\n            });\n        }\n        catch (error) {\n            console.log(error);\n        }\n    };\n    return (\n        <Fragment>\n            <form className='form-container' onSubmit={sendData}>\n                <div className='row'>\n                    <div className='col m6'>\n                        <div className=\"btn-dropdown info-container select-number table-number\">\n                            <select name='numeroMesa' onChange={handleInputChange} >\n                                <option value=\"\" disabled selected>Nº mesa</option>\n                                <option className='white-text' value=\"1\" >Mesa 1</option>\n                                <option value=\"2\" >Mesa 2</option>\n                                <option value=\"3\" >Mesa 3</option>\n                                <option value=\"4\" >Mesa 4</option>\n                                <option value=\"5\" >Mesa 5</option>\n                                <option value=\"6\" >Mesa 6</option>\n                                <option value=\"7\" >Mesa 7</option>\n                                <option value=\"8\" >Mesa 8</option>\n                                <option value=\"9\" >Mesa 9</option>\n                                <option value=\"10\" >Mesa 10</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className='col m6'>\n                        <div className=\"btn-dropdown info-container select-number person-number\">\n                            <select name='numeroComensales' onChange={handleInputChange} >\n                                <option value=\"\" disabled selected>Nº comensales</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"7\">7</option>\n                                <option value=\"8\">8</option>\n                                <option value=\"9\">9</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"11\">11</option>\n                                <option value=\"12\">12</option>\n                                <option value=\"13\">13</option>\n                                <option value=\"14\">14</option>\n                                <option value=\"15\">15</option>\n                            </select>\n                        </div>\n\n                    </div>\n                </div>\n                <div className='row div-submit'>\n                    <button className='btn-submit' type='submit'>Enviar</button>\n                </div>\n            </form>\n        </Fragment >\n    );\n};\n\nexport default ClientInfoForm;","import React, { Fragment } from 'react';\nimport ClientInfoForm from './client-Info/ClientInfo';\nimport './dashboard.css';\n\nconst Button = ({ setVisible, data, setData }) => {\n    return (\n        <Fragment>\n            <div className='col m12 center-align btn-opt-menu'>\n                <div className=\"col s3\">\n                    <button className='dash-btn' onClick={() => { setVisible(true); }}>Desayunos</button>\n                </div>\n                <div className=\"col s3\">\n                    <button className='dash-btn food-btn' onClick={() => { setVisible(false); }}>Comidas</button>\n                </div>\n                <div className='col m6 client-info'>\n                    <ClientInfoForm data={data} setData={setData} />\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Button;","import React, { Fragment } from 'react';\n\nconst SignedInLinks = () => {\n    return (\n        <Fragment>\n            <ul className='right'>\n                <li className='icn'><a href='/kitchen'><span className=\"material-icons\">room_service</span></a></li>\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default SignedInLinks;","import React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SignedInLinks from '../layout/SignedInLinks';\nimport bqLogo from '../../img/logo.svg';\nimport 'firebase/auth';\nimport './layout.css';\nimport { firebase } from '../../firebase/firebaseConfig';\n\nconst Navbar = (props) => {\n\n    const logOut = () => {\n        console.log('saliendo...');\n        firebase.auth().signOut().then(function () {\n            props.history.push('/initial');\n        }).catch(function (error) {\n        });\n    };\n\n    return (\n        <Fragment>\n            <div>\n                <nav className='nav-wrapper black bar browser-default'>\n                    <div className=' left-align'>\n                        <div data-target='slide-out' className='sidenav-trigger show-on-large'>\n                            <i className='material-icons nav-icon-menu'>menu</i>\n                        </div>\n                        <SignedInLinks />\n                    </div>\n                </nav>\n                <ul id=\"slide-out\" className=\"sidenav black\">\n                    <li>\n                        <div className=\"logo-burger center-align\">\n                            <img src={bqLogo} className='bq-logo' alt='logo'></img>\n                            <p className='yellow-text bq-text-navbar'>Burger Queen</p>\n                        </div>\n                    </li>\n                    <div className='opt-menu-navbar'>\n                        <li><a href='/' className='white-text text-menu'>Menu</a></li>\n                        <li><div><div className=\"divider yellow line-menu\"></div></div></li>\n                        <li><a href='/orders' className='white-text text-menu'>Ordenes</a></li>\n                        <li><div className=\"divider yellow line-menu\"></div></li>\n                        <li><a href='/admin' className='white-text text-menu'>Administración</a></li>\n                        <li><div className=\"divider yellow line-menu\"></div></li>\n                        <li><span className='white-text  text-menu' onClick={() => { logOut(); }}>Salir</span></li>\n                        <li><div className=\"divider yellow line-menu\"></div></li>\n                    </div>\n                </ul>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default withRouter(Navbar);","import React, { useState, Fragment } from 'react';\nimport BreakfastCards from '../dashboard/menuCards/BreakfastCards';\nimport DinnerCards from '../dashboard/menuCards/DinnerCards';\nimport ResumeMenu from '../dashboard/resume-menu/ResumeMenu';\nimport Button from '../dashboard/Button';\nimport Navbar from '../layout/Navbar';\n\nfunction Dashboard({ data, setData }) {\n\n    const [visible, setVisible] = useState(true);\n\n    const calculateTotal = (items = []) => items\n        .reduce((acc, item) => console.log('calculate', acc, item) || (acc + item.price * item.quantity), 0);\n\n    const addOrder = (product, quantity = 1) => {\n        if (data.productos.find(item => item.id === product.id)) {\n            const productos = data.productos\n                .map((item) => item.id === product.id ? { ...item, quantity } : item);\n            setData({\n                ...data,\n                productos,\n                total: calculateTotal(productos)\n            });\n        } else {\n            const productos = [...data.productos, { ...product, quantity }];\n            setData({\n                ...data,\n                productos,\n                total: calculateTotal(productos)\n            });\n        }\n    };\n\n    const deleteOrder = (id) => {\n        setData({\n            ...data,\n            productos: data.productos.filter(products => products.id !== id)\n        });\n    };\n\n    return (\n        <Fragment>\n            <div className='dashboard'>\n                <Navbar data={data} />\n                <div className='row'>\n                    <Button setVisible={setVisible} visible={visible} data={data} setData={setData} />\n                    <div className='col m6'>\n                        {visible ? <BreakfastCards addOrder={addOrder} /> : <DinnerCards addOrder={addOrder} />}\n                    </div>\n                    <div className='col s12 m5 offset-m0'>\n                        <ResumeMenu addOrder={addOrder} data={data} deleteOrder={deleteOrder} />\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Dashboard;","import React, { Fragment, useState } from 'react';\nimport './edit-order.css';\nimport { useBreakfast } from '../../dashboard/menuCards/BreakfastCards';\nimport { useDinner } from '../../dashboard/menuCards/DinnerCards';\n\nfunction EditOrder({ orderSelected }) {\n\n    const desayunos = useBreakfast();\n    const dinner = useDinner();\n\n    const [finalOrder, setFinalOrder] = useState({\n        order: [],\n        total: '',\n    });\n\n    const [newAdditionToOrder, setNewAdditionToOrder] = useState({\n        productos: [],\n        total: orderSelected.total,\n    });\n\n    const allItemsOrdered = async () => {\n        const previousOrder = orderSelected.order;\n        const currentOder = newAdditionToOrder.productos;\n        const nuevaOrden = previousOrder.concat(currentOder);\n        setFinalOrder({\n            ...finalOrder, order: [...finalOrder.order, nuevaOrden]\n        });\n    };\n\n    const newProduct = newAdditionToOrder.productos;\n\n    const calculateTotal = (items = []) => items\n        .reduce((acc, item) => console.log(acc, item) || (acc + item.price * item.quantity), 0);\n\n    const addNewProduct = (product, quantity = 1) => {\n        if (newAdditionToOrder.productos.find(item => item.id === product.id)) {\n            const productos = newAdditionToOrder.productos\n                .map((item) => item.id === product.id ? { ...item, quantity } : item);\n            setNewAdditionToOrder({\n                ...newAdditionToOrder,\n                productos,\n                total: calculateTotal(productos)\n            });\n        } else {\n            const productos = [...newAdditionToOrder.productos, { ...product, quantity }];\n            setNewAdditionToOrder({\n                ...newAdditionToOrder,\n                productos,\n                total: calculateTotal(productos)\n            });\n        }\n    };\n\n    return (\n        <Fragment>\n            <div id=\"modal2\" className=\"modal scroll mod-edit-options\">\n                <div className='info-table-selected'>\n                    <p className='table-num'>Mesa  {orderSelected.table}</p>\n                </div>\n                <div className=\"modal-content mod-content-edit\">\n                    <div className='add-products-order'>\n                        <table className='table-new-items-added'>\n                            <thead>\n                                <tr>\n                                    <th>Productos ordenados</th>\n                                    <th>Cantidad</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {orderSelected.order.map((item) => (\n                                    <tr>\n                                        <td>\n                                            <div className='product-added'>\n                                                <button type='button' className='btn-delete-item-added'>X</button>\n                                                <p className='item-text-table'>{item.item}</p>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <p>{item.quantity} </p>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className='add-products-order'>\n                        <table className='table-new-items-added'>\n                            <thead>\n                                <tr>\n                                    <th>Productos Agregados</th>\n                                    <th>Cant.</th>\n                                    <th>Precio total</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    newProduct.map((item) => (\n                                        <tr>\n                                            <td>\n                                                <div className='product-added'>\n                                                    <button type='button' className='btn-delete-item-added'>X</button>\n                                                    <p className='item-text-table'>{item.item}</p>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div className='quanity-product'>\n                                                    <button type='button' onClick={() => addNewProduct(item, item.quantity + 1)} className='btn-add'>+</button>\n                                                    <p>{item.quantity}</p>\n                                                    <button type='button' onClick={() => addNewProduct(item, item.quantity - 1)} className='btn-add'>-</button>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <p>${item.price * item.quantity}.00</p>\n                                            </td>\n                                        </tr>\n                                    )\n                                    )}\n                            </tbody>\n                            <tfoot>\n                                <tr className='resume-items-added'>\n                                    <td >Total</td>\n                                    <td>{newAdditionToOrder.productos.length}</td>\n                                    <td>${newAdditionToOrder.total}.00 </td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>\n                    <div className='add-products-order'>\n                        <table className='table-new-items-added'>\n                            <tr>\n                                <th>Desayunos</th>\n                                <th>Comidas</th>\n                            </tr>\n                            <tr>\n                                <td className='row-food-opts'>\n                                    {\n                                        desayunos.map((desayuno) => (\n                                            <div>\n                                                <tr>\n                                                    <p key={desayuno.id} className='item-text-table' onClick={() => { addNewProduct(desayuno); }}>{desayuno.item}</p>\n                                                </tr>\n                                            </div>\n                                        ))\n                                    }\n                                </td>\n                                <td>\n                                    {dinner.map((comida) => (\n                                        <div>\n                                            <tr>\n                                                <p key={comida.id} className='item-text-table' onClick={() => { addNewProduct(comida); }}>{comida.item}</p>\n                                            </tr>\n                                        </div>\n                                    ))\n                                    }\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n                <div className='btn-accept-edit'>\n                    <button className='btn-accept'>\n                        <a href=\"#!\" class=\"modal-close waves-effect waves-yellow btn-flat\" onClick={allItemsOrdered}>Aceptar</a>\n                    </button>\n                </div>\n            </div>\n        </Fragment >\n    );\n};\nexport default EditOrder;\n\n","import React, { Fragment, useState } from 'react';\nimport { firebase } from '../../../firebase/firebaseConfig';\nimport './order-finished.css';\n\nfunction OrderFinished({ orderFinished }) {\n    const [totalWithTip, setTotalWithTip] = useState(0);\n    const [paymentMethod, setPaymentMethod] = useState('');\n\n    const sendOrderFinished = () => {\n        firebase\n            .firestore()\n            .collection('orders')\n            .doc(orderFinished.id)\n            .update({\n                endingOrder: 'si',\n                total: totalWithTip,\n                payment: paymentMethod,\n            })\n            .then(function () {\n                console.log(\"Document successfully updated!\");\n            })\n            .catch(function (error) {\n                console.error(\"Error updating document: \", error);\n            });\n    };\n\n    const paymentMethodSelected = (e) => {\n        const method = e.target.value;\n        setPaymentMethod(method);\n    };\n    console.log(paymentMethod);\n\n    const newTotalCalculated = (tip) => {\n        const newTotal = tip * orderFinished.total;\n        setTotalWithTip(newTotal.toFixed(2));\n    };\n\n    return (\n        <Fragment>\n            <div id=\"modal1\" className=\"modal scroll mod-end-order\">\n                <div className=\"modal-content end-order \">\n                    <div>\n                        <p className='title-opt-end-order'> Método de pago </p>\n                        <div className='opt text-black'>\n                            <select className='opt black-text' onChange={paymentMethodSelected}>\n                                <option value=\"\" disabled selected>Elige una opción</option>\n                                <option className='opt text-red' value=\"Efectivo\">Efectivo</option>\n                                <option className='opt' value=\"tarjetaCredito\" >Tarjeta de crédito</option>\n                                <option className='opt' value=\"tarjetaDebito\">Tarjeta de regalo</option>\n                            </select>\n                        </div>\n                        <div>\n                            <p className='total-order-finished'>Total: {orderFinished.total}</p>\n                        </div>\n                    </div>\n                    <div>\n                        <p className='title-opt-end-order'> Agregar propina</p>\n                        <form action=\"#\">\n                            <p>\n                                <label>\n                                    <input name=\"group1\" type=\"radio\" checked onClick={() => { newTotalCalculated(1); }} />\n                                    <span className='total-order-finished'>No</span>\n                                </label>\n                            </p>\n                            <p>\n                                <label>\n                                    <input name=\"group1\" type=\"radio\" checked onClick={() => { newTotalCalculated(1.10); }} />\n                                    <span className='total-order-finished'>10%</span>\n                                </label>\n                            </p>\n                            <p>\n                                <label>\n                                    <input name=\"group1\" type=\"radio\" onClick={() => { newTotalCalculated(1.15); }} />\n                                    <span className='total-order-finished'>15%</span>\n                                </label>\n                            </p>\n                            <div>\n                                <p className='total-order-finished'>Total incluyendo propina: {totalWithTip}</p>\n                            </div>\n                        </form>\n                    </div>\n                    <div>\n                        <p className='title-opt-end-order'>Obtener comprobante</p>\n                        <div className=''>\n                            <select className='options'>\n                                <option value=\"\" disabled selected>Elige una opción</option>\n                                <option className='opt' value=\"1\">Si</option>\n                                <option className='opt' value=\"2\">No</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer btn-accept\">\n                        <button className='btn-end-edit-order'>\n                            <a href=\"#!\" class=\"modal-close waves-effect waves-yellow btn-flat\" onClick={sendOrderFinished}>Aceptar</a>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n\nexport default OrderFinished;","import React from 'react';\nimport { useStopwatch } from 'react-timer-hook';\nimport { firebase } from '../../../firebase/firebaseConfig';\nimport './chronometer.css';\n\nfunction Chronometer({ item }) {\n\n    const {\n        seconds,\n        minutes,\n        start,\n        pause,\n    } = useStopwatch({ autoStart: false });\n\n    const totalTime = async (minutes, seconds) => {\n        const total = minutes + ':' + seconds + 'minutos';\n\n        await firebase\n            .firestore()\n            .collection('orders')\n            .doc(item.id)\n            .update({\n                waitTime: (total)\n            })\n            .then(function () {\n                console.log(\"Document successfully updated!\");\n            })\n            .catch(function (error) {\n                console.error(\"Error updating document: \", error);\n            });\n    };\n\n    return (\n        <div className='chronometer'>\n            <span>{minutes}</span>:<span>{seconds}</span>\n            <div className='btns-chrm'>\n                <button className='btn-opt-chrm' onClick={start}>Iniciar</button>\n                <button className='btn-opt-chrm' onClick={pause}>Detener</button>\n                <button className='btn-update-time' onClick={() => { totalTime(minutes, seconds); }}></button>\n            </div>\n        </div>\n    );\n}\nexport default Chronometer;\n","import React, { Fragment } from 'react';\nimport './btn-status.css';\nimport { firebase } from '../../../firebase/firebaseConfig';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction BtnStatus({ orderSelected }) {\n\n    const updateDoc = async (e) => {\n        e.preventDefault();\n        console.log(orderSelected.id);\n\n        await firebase\n            .firestore()\n            .collection('orders')\n            .doc(orderSelected.id)\n            .update({\n                status: 'finalizado'\n            })\n            .then(function () {\n                console.log(\"Document successfully updated!\");\n            })\n            .catch(function (error) {\n                console.error(\"Error updating document: \", error);\n            });\n\n        toast.success('Pedido listo para entrega' + ' Mesa ➞ ' + orderSelected.table, {\n            className: 'order-ready',\n            position: \"top-right\",\n            type: 'dark',\n            autoClose: false,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false,\n            progress: undefined,\n        });\n    };\n\n    return (\n        <Fragment>\n            <div className='row resume-status'>\n                <div id=\"modal3\" className=\"modal status-opt\">\n                    <div className=\"input-field col s12  status-menu\">\n                        <p className='title-opt-end-order'>Status del pedido</p>\n                        <select>\n                            <option value=\"\" disabled selected>Pendiente</option>\n                            <option value=\"1\">Terminada</option>\n                            <option value=\"3\">Cancelada</option>\n                        </select>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button href=\"#!\" class=\"modal-close waves-effect waves-yellow btn-flat btn-update-status\" onClick={updateDoc}>Cambiar</button>\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n\nexport default BtnStatus;","import React, { useEffect, useState, Fragment } from 'react';\nimport './orders.css';\nimport Navbar from '../../layout/Navbar';\nimport EditOrder from '../edit-order/EditOrder';\nimport OrderFinished from '../order-finished/OrderFinished';\nimport { firebase } from '../../../firebase/firebaseConfig';\nimport editImage from '../images/edit.svg';\nimport Chronometer from '../chronometer/Chronometer';\nimport BtnStatus from '../status/BtnStatus';\n\nexport function useOrder() {\n    const [order, setOrder] = useState([]);\n\n    const date = new Date();\n    const currentDay = [date.getDate(), date.getMonth(), date.getFullYear()].join('/');\n\n    useEffect(() => {\n        firebase\n            .firestore()\n            .collection('orders')\n            .where(\"date\", \"==\", currentDay)\n            .where(\"endingOrder\", \"==\", 'no')\n            .orderBy('hour', 'desc')\n            .limit(10)\n            .onSnapshot((snapshot) => {\n                const newOrder = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n                setOrder(newOrder);\n            });\n    }, [currentDay]);\n    return order;\n}\n\nfunction Orders({ datos }) {\n\n    const order = useOrder();\n    const [orderFinished, setOrderFinished] = useState({\n        table: '',\n        people: '',\n        order: '',\n        payment: '',\n        total: '',\n        date: '',\n        hour: '',\n        deliveryTime: '',\n        status: 'pendiente'\n    });\n\n    const finishedOrder = (item) => {\n        setOrderFinished(item);\n    };\n\n    const [orderSelected, setOrderSelected] = useState({\n        id: '',\n        order: [],\n        table: '',\n        total: '',\n        people: '',\n        date: '',\n        hour: '',\n        deliveryTime: '',\n        status: 'pendiente'\n    });\n\n    const editBtn = (item) => {\n        setOrderSelected(item);\n    };\n\n    const changeOrder = (item) => {\n        setOrderSelected(item);\n\n    };\n\n    return (\n        <Fragment>\n            <div className='bck-imag-orders'>\n                <Navbar datos={datos} />\n                <div className='row order-h2'>\n                    <h2 className='white-text kitchen-title'>Cocina</h2>\n                </div>\n                <div className='resume-box'>\n                    {\n                        order.map(item => (\n                            <div className='post-it'>\n                                <div className='text-order-resume'>\n                                    <div className='table-info'>\n                                        <p className='table-info'>Mesa {item.table}</p>\n                                        <p className='table-info'>{item.hour}</p>\n                                        {<img src={editImage} onClick={() => { editBtn(item); }} alt='edit' className=\"waves-effect waves-light btn modal-trigger mod-edit\" href=\"#modal2\" />}\n                                    </div>\n                                    <Chronometer item={item} />\n                                    <div>\n                                        <div className='list-products scroll'>\n                                            {item.order.map(a => (\n                                                <form action=\"#\">\n                                                    <p className='chosen-item'>\n                                                        <label className='item-ordered'>\n                                                            <input className='box' type=\"checkbox\" />\n                                                            <span className='black-text text-item'>{a.item}\n                                                            </span>\n                                                            <span className='black-text num-item'>{a.quantity}</span>\n                                                        </label>\n                                                    </p>\n                                                </form>\n                                            ))}\n                                        </div>\n                                    </div>\n                                    <div className='btn-opt-order'>\n                                        <button class=\"waves-effect waves-light btn modal-trigger  btn-change-status\" href=\"#modal3\" onClick={() => changeOrder(item)}>status</button>\n                                        <button className=\"waves-effect waves-light btn modal-trigger end-btn\" href=\"#modal1\" onClick={() => finishedOrder(item)} >Finalizar</button>\n                                    </div>\n                                </div>\n                            </div>\n                        ))\n                    }\n                    <OrderFinished orderFinished={orderFinished} />\n                    <EditOrder orderSelected={orderSelected} />\n                    <BtnStatus orderSelected={orderSelected} />\n                </div>\n            </div>\n        </Fragment >\n\n    );\n}\nexport default Orders;\n\n\n","import React, { Fragment } from 'react';\nimport Modal from 'react-modal';\nimport './auth.css';\n\nconst ModalAuth = ({ modalIsOpen, setModalIsOpen }) => {\n\n  return (\n    <Fragment>\n      <Modal isOpen={modalIsOpen} >\n        <div>\n          <span className=\"material-icons close\" onClick={() => { setModalIsOpen(false); }} >close</span>\n        </div>\n        <div>\n          <p className='center-align instruction'>Ingresa tu correo para recuperar tu contraseña</p>\n          <input type='email' className='email-input black-text' ></input>\n        </div>\n        <div className='submit-btn center-align'>\n          <button className='send-btn'>Enviar</button>\n        </div>\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default ModalAuth;\n\n\n\n\n\n\n\n\n\n\n\n/* import React, { Component } from 'react'\nimport { M } from 'materialize-css'\n\nclass Modal extends Component {\n\n  componentDidMount() {\n  document.addEventListener('DOMContentLoaded', function() {\n    var elems = document.querySelectorAll('.modal');\n    var instances = M.Modal.init(elems, {});\n  });\n}\n\n  render() {\n    return (\n      <div>\n\n        <a className=\"waves-effect waves-light btn modal-trigger\" href=\"#modal1\">Modal</a>\n\n        <div id=\"modal1\" className=\"modal\">\n          <div className=\"modal-content\">\n            <h4>Modal Header</h4>\n            <p>A bunch of text</p>\n          </div>\n          <div className=\"modal-footer\">\n            <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Agree</a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Modal; */","import React, { useState, useCallback, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { firebase } from '../../firebase/firebaseConfig';\nimport ModalAuth from '../auth/Modal';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport bqLogo from '../../img/logo.svg';\nimport '../auth/auth.css';\n\nconst SignIn = (props) => {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            login();\n        }\n        catch (err) {\n            console.log(err);\n        }\n    };\n\n    const login = useCallback(async () => {\n        try {\n            const res = await firebase.auth().signInWithEmailAndPassword(email, password);\n            console.log(res);\n            props.history.push('/');\n        } catch (error) {\n            console.log(error);\n            if (error.code === 'auth/invalid-email') {\n                toast.error('Verifica tu correo', {\n                    className: 'toast-success',\n                    autoClose: 4000,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n            if (error.code === 'auth/user-not-found') {\n                toast.error('Email no encontrado', {\n                    className: 'toast-success',\n                    autoClose: 4000,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n            if (error.code === 'auth/wrong-password') {\n                toast.error('Contraseña incorrecta', {\n                    className: 'toast-success',\n                    autoClose: 4000,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }\n\n    },\n        [email, password, props.history],\n    );\n\n    return (\n        <Fragment>\n            <div className='initial-image-blur'>\n                <div className='container form-container row'>\n                    <div className='col m7 right'>\n                        <form className='signin-form'>\n                            <div className=\"logo-burger center-align\">\n                                <img src={bqLogo} className='bq-logo' alt='logo'></img>\n                            </div>\n                            <div className='container'>\n                                <h5 className='white-text center-align'>Inicio de Sesión</h5>\n                                <div className='input'>\n                                    <label htmlFor='email' >Correo</label>\n                                    <input type='email' id='email' onChange={(e) => setEmail(e.target.value)} />\n                                </div>\n                                <div className='input'>\n                                    <label htmlFor='password'>Contraseña</label>\n                                    <input type='password' id='password' onChange={(e) => setPassword(e.target.value)} />\n                                </div>\n                                <div className='right-align'>\n                                    <p className='new-pass white-text' onClick={() => { setModalIsOpen(true); }}>Recuperar mi contraseña</p>\n                                    <ModalAuth modalIsOpen={modalIsOpen} setModalIsOpen={setModalIsOpen} />\n                                </div>\n                            </div>\n                            <div className='input center-align'>\n                                <button className='black btn-log-in white-text' data-testid='log-btn' onClick={submit}>Ingresar</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\nexport default SignIn;\n\n\n","import React, { Fragment } from 'react';\nimport './detail-order.css';\nimport logoBQ from '../../../img/logo-receipt.png';\nimport barras from '../../../img/barras.png';\n\nfunction DetailOrders({ orderSelected }) {\n\n    const order = orderSelected;\n\n    return (\n        <Fragment>\n            <div id=\"modal4\" className=\"modal scroll mod-end-order\">\n                <div className=\"modal-content end-order \">\n                    <div>\n                        <div>\n                            <p className='title-receipt'> Comprobante de orden </p>\n                        </div>\n                        <div className='resume-receipt'>\n                            <div className='header-receipt'>\n                                <img src={logoBQ} className='logo-receipt' />\n                                <p className='text-header-receipt resume'>Resumen de pedido</p>\n                                <p className='text-header-receipt'>Av. Paseo de la Reforma 222, Juárez, Cuauhtémoc, 06600 Ciudad de México, CDMX</p>\n                            </div>\n                            <div className='division'></div>\n                            <div className='general-info-order'>\n                                <p><b>Fecha:</b> {order.date}</p>\n                                <p><b>Hora: </b>{order.hour}</p>\n                                <p><b>No de comensales: </b> {order.people}</p>\n                                <p><b>No de mesa: </b> {order.table}</p>\n                                <p><b>Mesero :</b> Xel Jimenez</p>\n                                <p><b>Método de pago:</b> {order.payment}</p>\n                                <p><b>No. de orden: </b>{order.id}</p>\n                            </div>\n                            <div className='division'></div>\n                            <div>\n                                <table className='table-resume-order-receipt'>\n                                    <thead>\n                                        <tr>\n                                            <th className='text-resume-order'>Cant.</th>\n                                            <th>Producto</th>\n                                            <th className='text-resume-order'>Precio</th>\n                                            <th className='text-resume-order'>Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {order.order.map(item => (\n                                            <tr>\n                                                <td className='text-resume-order'>{item.quantity}</td>\n                                                <td >{item.item}</td>\n                                                <td className='text-resume-order'>$ {item.price}.00</td>\n                                                <td className='text-resume-order'>$ {item.price * item.quantity}.00</td>\n                                            </tr>\n\n                                        ))}\n                                    </tbody>\n                                    <tfoot>\n                                        <tr>\n                                            <td></td>\n                                            <td></td>\n                                            <td>Total</td>\n                                            <td className='total-receipt'>$ {order.total * 0.85}.00</td>\n                                        </tr>\n                                        <tr>\n                                            <td></td>\n                                            <td></td>\n                                            <td>Propina:</td>\n                                            <td className='total-receipt'>15%</td>\n                                        </tr>\n                                        <tr>\n                                            <td></td>\n                                            <td></td>\n                                            <td><b>Nuevo Total:</b></td>\n                                            <td className='total-resume-order'>$ {order.total}.00</td>\n                                        </tr>\n                                    </tfoot>\n                                </table>\n                            </div>\n                            <div className='division'></div>\n                            <div className='goodbye'>\n                                <p>¡Gracias por tu visita!</p>\n                                <p>Regresa pronto</p>\n                            </div>\n                            <div>\n                                <img src={barras} className='logo-receipt' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='footer-modal-receipt'>\n                        <button className='btn-print-order'><a href=\"#!\" class=\"modal-close waves-effect waves-yellow btn-flat\" >Imprimir comprobante</a></button>\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    );\n}\n\nexport default DetailOrders;","import React, { Fragment, useState, useEffect } from 'react';\nimport { firebase } from '../../../firebase/firebaseConfig';\nimport Navbar from '../../layout/Navbar';\nimport './all-orders.css';\nimport DetailOrders from './detailsOrder';\n\nexport function useAllOrder() {\n    const [allOrder, setAllOrder] = useState([]);\n\n    useEffect(() => {\n        firebase\n            .firestore()\n            .collection('orders')\n            .orderBy('date', 'desc')\n            .limit(30)\n            .onSnapshot((snapshot) => {\n                const newOrder = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n                setAllOrder(newOrder);\n            });\n    }, []);\n    return allOrder;\n}\n\nfunction AllOrders() {\n    const orders = useAllOrder();\n\n    const [orderSelected, setOrderSelected] = useState({\n        id: '',\n        order: [],\n        table: '',\n        total: '',\n        people: '',\n        date: '',\n        hour: '',\n        deliveryTime: '',\n        status: 'pendiente'\n    });\n\n    const viewReceipt = (order) => {\n        setOrderSelected(order);\n    };\n\n    return (\n        <Fragment>\n            <div className='bck-imag-orders'>\n                <Navbar />\n                <div className='container'>\n                    <h1 className='title-admin white-text'>Ordenes Totales</h1>\n                    <div>\n                        <div class=\"input-field col s12\">\n                            <select>\n                                <option value=\"\" disabled selected>Filtrar ordenes:</option>\n                                <option value=\"1\">Mesero</option>\n                                <option value=\"2\">Fecha</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className='table-elements'>\n                        <div className='table-container'>\n                            <table className='table-elements'>\n                                <thead>\n                                    <tr className='header-table'>\n                                        <th className='title-table'>Fecha y hora</th>\n                                        <th className='title-table'>No. de orden</th>\n                                        <th className='title-table'>Tiempo de entrega</th>\n                                        <th className='title-table'>Total</th>\n                                        <th className='title-table'>Orden</th>\n                                    </tr>\n                                </thead>\n                                {orders.map((order) =>\n                                    <tbody key={order.id}>\n                                        <tr>\n                                            <td className='title-table'>{order.date}</td>\n                                            <td className='title-table'>{order.id}</td>\n                                            <td className='title-table'>{order.waitTime}</td>\n                                            <td className='title-table'>${order.total}.00</td>\n                                            <td className='title-table'>\n                                                <div className=' btn-detail'>\n                                                    <button className=\"waves-effect waves-light btn modal-trigger btn-details-orders\" href=\"#modal4\" onClick={() => viewReceipt(order)}>Detalles</button>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                )}\n                            </table>\n                        </div>\n                    </div>\n                    <DetailOrders orderSelected={orderSelected} />\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\n\nexport default AllOrders;","import React, { useState, useCallback, Fragment } from 'react';\nimport { firebase } from '../../firebase/firebaseConfig';\nimport './admin.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ModalAdmin = ({ user, setUser }) => {\n\n    const submit = async e => {\n        e.preventDefault();\n        try {\n            register();\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const [newEmail, setNewEmail] = useState('');\n    const [newPass, setNewPass] = useState('');\n    const [newName, setNewName] = useState('');\n    const [newWork, setNewWork] = useState('');\n\n    const register = useCallback(async (e) => {\n        try {\n            const res = await firebase.auth().createUserWithEmailAndPassword(newEmail, newPass);\n            console.log(res);\n            const userInfo = {\n                email: res.user.email,\n                uid: res.user.uid,\n                name: newName,\n                workstation: newWork\n            };\n            await firebase.firestore().collection('users').doc(res.user.email).set(userInfo);\n            setUser([\n                ...user,\n                { ...userInfo, id: res.user.id }]);\n\n            setNewEmail('');\n            setNewName('');\n            setNewPass('');\n            setNewWork('');\n        } catch (error) {\n            if (error.code === 'auth/email-already-in-use')\n                toast.error('Email en uso', {\n                    className: 'toast-success',\n                    autoClose: 4000,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n        }\n    },\n        [newPass, newEmail, newName, setUser, user, newWork],\n    );\n\n    return (\n        <Fragment>\n            <div className='container'>\n                <a className=\"waves-effect waves-light btn modal-trigger add-btn add-text black-text\" href=\"#modal1\">Agregar</a>\n                <div >\n                    <div id=\"modal1\" className=\"modal black\">\n                        <div className=\"modal-content text-font\">\n                            <h4 className='white-text'>Registrar personal</h4>\n                        </div>\n                        <div className='container'>\n                            <form>\n                                <input\n                                    className='ipt'\n                                    type='text'\n                                    onChange={e => setNewName(e.target.value)}\n                                    value={newName}\n                                    placeholder='Nombre'\n                                />\n                                <input\n                                    className='ipt'\n                                    type='text'\n                                    onChange={e => setNewWork(e.target.value)}\n                                    value={newWork}\n                                    placeholder='Estación'\n                                />\n                                <input\n                                    className='ipt'\n                                    type='email'\n                                    onChange={e => setNewEmail(e.target.value)}\n                                    value={newEmail}\n                                    placeholder='Correo'\n                                />\n                                <input\n                                    className='ipt'\n\n                                    type='password'\n                                    onChange={e => setNewPass(e.target.value)}\n                                    value={newPass}\n                                    placeholder='Contraseña'\n                                />\n                            </form>\n                        </div>\n                        <div className=\"modal-footer black register-btn\">\n                            <a\n                                href=\"#!\"\n                                className=\"modal-close waves-effect waves-green btn-flat white-text center-align register-text\"\n                                onClick={submit}\n                            >Registrar</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ModalAdmin;","import React, { useEffect, useState, Fragment } from 'react';\nimport { firebase } from '../../firebase/firebaseConfig';\nimport ModalAdmin from './ModalAdmin';\nimport Navbar from '../layout/Navbar';\nimport '../admon/admin.css';\n\nconst Admin = () => {\n\n    const [user, setUser] = useState([]);\n\n    useEffect(() => {\n        const getUsers = async () => {\n            try {\n                const data = await firebase.firestore().collection('users').get();\n                const arrayData = data.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n                setUser(arrayData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        getUsers();\n    }, []);\n\n    return (\n        <Fragment>\n            <div className='bck-imag-orders'>\n                <Navbar />\n                <div className='container'>\n                    <h1 className='title-admin white-text'>Administrar accesos</h1>\n                    <div className='row'>\n                        <div className=' table-user white'>\n                            <table className='black-text'>\n                                <thead>\n                                    <tr>\n                                        <th>Nombre</th>\n                                        <th>Correo</th>\n                                        <th>Estación  </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        user.map(item => (\n                                            <tr key={item.id}>\n\n                                                <td>{item.name}</td>\n                                                <td>{item.email}</td>\n                                                <td>{item.workstation}</td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className='add-personal center-align'>\n                            <ModalAdmin user={user} setUser={setUser} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Admin;\n","import React, { Fragment } from 'react';\nimport './burgerQueen.css';\nimport logo from '../../img/initBurger.png';\n\nfunction BurgerQueen() {\n    return (\n        <Fragment>\n            <div className='initial-image'>\n                <img className='logo' src={logo} alt='logo' />\n                <div className='red'>\n                    <a href='/login'><button className='btn-login right'>login</button></a>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default BurgerQueen;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard.jsx';\nimport Orders from './components/orders/order/Orders';\nimport SignIn from './components/auth/SignIn';\nimport AllOrders from './components/admon/all-orders/AllOrders';\nimport Admin from './components/admon/Admin';\nimport BurgerQueen from './components/BQ/BurgerQueen.jsx';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport { firebase } from './firebase/firebaseConfig';\n\nfunction App() {\n\n  useEffect(() => {\n    const unsuscribe = firebase.auth().onAuthStateChanged(user => {\n      return user;\n    });\n    return unsuscribe;\n  }, []);\n\n  const [data, setData] = useState({\n    numeroMesa: '',\n    numeroComensales: '',\n    productos: [],\n    total: '',\n  });\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/initial' component={BurgerQueen} />\n          <Route path='/login' component={SignIn} />\n          <Route path='/admin' component={Admin} />\n          <Route exact path='/' render={() => <Dashboard data={data} setData={setData} />} />\n          <Route path='/kitchen' render={() => <Orders />} />\n          <Route path='/orders' component={AllOrders} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default App; \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render((\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n),\n  document.getElementById('root'));\n\nserviceWorker.register();"],"sourceRoot":""}